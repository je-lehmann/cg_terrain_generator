// map x,y,z coord to a density value n between +1 and -1
// feed user parameters in here to manipulate generated perlin noise!
// public virtual ComputeBuffer Generate (ComputeBuffer pointBuffer, int vertsPerAxis, ... pos, scale, more stuff?) {

#pragma kernel DensityFunction
#include "NoiseLibrary.compute"

static const int numThreads = 8; // overwrite this?
RWStructuredBuffer<float4> verts;
int vertsPerAxis;
bool noiseEnabled;

[numthreads(numThreads,numThreads,numThreads)]
void DensityFunction (int3 id : SV_DispatchThreadID){
    
    if (id.x >= vertsPerAxis || id.y >= vertsPerAxis || id.z >= vertsPerAxis) {
        return;
    }
    float3 pos = id - 0.5; //scaling needed later
    float d = 0;
    if (noiseEnabled){
        d = snoise(pos);

    } else {
        d = (pos);
    }

    int index = id.x + id.y * vertsPerAxis + id.z * vertsPerAxis * vertsPerAxis;
    verts[index] = float4(pos, d);
}
